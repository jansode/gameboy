#!/usr/bin/env python3

'''
A script that generates tables for the gameboy cpu instructions from this html page: 
    http://pastraiser.com/cpu/gameboy/gameboy_opcodes.html 

The script generates two files:
    instructions.h
    cb_instructions.h
'''


from bs4 import BeautifulSoup

#Use the background colors to distinguish between instruction types
MISC_COLOR          = '#ff99cc'
JUMP_COLOR          = '#ffcc99'
LOAD_8BIT_COLOR     = '#ccccff'
LOAD_16BIT_COLOR    = '#ccffcc'
ARITHM_8BIT_COLOR   = '#ffff99'
ARITHM_16BIT_COLOR  = '#ffcccc'
ROTATION_8BIT_COLOR = '#80ffff'

INSTR_TYPE = {
    MISC_COLOR:"INSTR_MISC",
    JUMP_COLOR:"INSTR_JUMP",
    LOAD_8BIT_COLOR:"INSTR_8BIT_LOAD",
    LOAD_16BIT_COLOR:"INSTR_16BIT_LOAD",
    ARITHM_8BIT_COLOR:"INSTR_8BIT_ARITHM",
    ARITHM_16BIT_COLOR:"INSTR_16BIT_ARITHM",
    ROTATION_8BIT_COLOR:"INSTR_8BIT_BIT"
    }

f = open('gameboy_opcodes.html','r')
html = f.read()
f.close()

soup = BeautifulSoup(html,'html.parser')
table_all = soup.find_all("table")
first_table = table_all[0]
second_table = table_all[1] #CB PREFIX

td_first = first_table.find_all("td")
td_second = second_table.find_all("td")

#generate instruction table
curr_index = 0x00
skip_indices = [0xd3,0xdb,0xdd,0xe3,0xe4,0xeb,0xec,0xed,0xf4,0xfc,0xfd]
output = "/* AUTOGENERATED INSTRUCTION TABLE */\n" 
output += "/* FORMAT: {mnemonic, type, length} */\n\n" 
for td in td_first:
    if td.has_attr('bgcolor') and td['bgcolor'] in INSTR_TYPE:
        length = td.find('br').next[0]
        output+='/*'+str.format('0x{:02X}',curr_index)+'*/{"'+td.next+'",'+INSTR_TYPE[td['bgcolor']]+','+length+'},\n'
        curr_index+=1
        while curr_index in skip_indices:
            output+='/*'+str.format('0x{:02X}',curr_index)+'*/{"NONE",INSTR_NONE,0},\n'
            curr_index+=1

f = open('instruction_table.h','w')
f.write(output[:-2])
f.close()

#generate CB prefix instruction table
curr_index = 0x00
output = "/* AUTOGENERATED CB PREFIX INSTRUCTION TABLE */\n" 
output += "/* FORMAT: {mnemonic, type, length} */\n\n" 
for td in td_second:
    if td.has_attr('bgcolor') and td['bgcolor'] in INSTR_TYPE:
        length = td.find('br').next[0]
        output+='/*'+str.format('0xcb{:02X}',curr_index)+'*/{"'+td.next+'",'+INSTR_TYPE[td['bgcolor']]+','+length+'},\n'
        curr_index+=1

f = open('cb_instruction_table.h','w')
f.write(output[:-2])
f.close()

